--- sio.c.original	2025-07-26 16:39:35.832221326 -0400
+++ sio.c	2025-07-26 20:07:09.727607512 -0400
@@ -1668,8 +1668,37 @@
 #ifdef NETSIO
 	if (netsio_enabled)
 	{
-		NetSIO_PutByte(byte);
-		return;
+		/* For disk devices D1:-D8:, check if local disk should take priority */
+		int use_local = 0;
+		
+		/* Check device ID from command frame */
+		if (TransferStatus == SIO_CommandFrame && CommandIndex == 0) {
+			/* First byte is device ID */
+			if (byte >= 0x31 && byte <= 0x38) {
+				int drive = byte - 0x31;
+				if (drive >= 0 && drive < SIO_MAX_DRIVES && 
+				    SIO_drive_status[drive] != SIO_OFF && 
+				    SIO_drive_status[drive] != SIO_NO_DISK) {
+					/* Local disk is mounted and ready */
+					use_local = 1;
+				}
+			}
+		} else if (CommandIndex > 0 && CommandFrame[0] >= 0x31 && CommandFrame[0] <= 0x38) {
+			/* Subsequent bytes - check saved device ID */
+			int drive = CommandFrame[0] - 0x31;
+			if (drive >= 0 && drive < SIO_MAX_DRIVES && 
+			    SIO_drive_status[drive] != SIO_OFF && 
+			    SIO_drive_status[drive] != SIO_NO_DISK) {
+				/* Local disk is mounted and ready */
+				use_local = 1;
+			}
+		}
+		
+		if (!use_local) {
+			NetSIO_PutByte(byte);
+			return;
+		}
+		/* Otherwise continue with local SIO processing */
 	}
 #endif /* NETSIO */
 	switch (TransferStatus) {
@@ -1813,7 +1842,7 @@
 		break;
 	}
 #ifdef DEBUG2
-	Log_print("NetSIO_GetByte_%d: %02x", ts, (int)b);
+	Log_print("NetSIO_GetByte_%d: %02x", TransferStatus, (int)b);
 #endif
 
 	return (int)b;
@@ -1827,7 +1856,26 @@
 
 #ifdef NETSIO
 	if (netsio_enabled)
-		return NetSIO_GetByte();
+	{
+		/* For disk devices D1:-D8:, check if local disk should take priority */
+		int use_local = 0;
+		
+		/* Check if we have a valid command for a disk device */
+		if (CommandFrame[0] >= 0x31 && CommandFrame[0] <= 0x38) {
+			int drive = CommandFrame[0] - 0x31;
+			if (drive >= 0 && drive < SIO_MAX_DRIVES && 
+			    SIO_drive_status[drive] != SIO_OFF && 
+			    SIO_drive_status[drive] != SIO_NO_DISK) {
+				/* Local disk is mounted and ready */
+				use_local = 1;
+			}
+		}
+		
+		if (!use_local) {
+			return NetSIO_GetByte();
+		}
+		/* Otherwise continue with local SIO processing */
+	}
 #endif /* NETSIO */
 
 	switch (TransferStatus) {
